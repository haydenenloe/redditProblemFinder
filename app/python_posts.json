[
    {
        "title": "Support Python: Our End-of-Year Fundraiser with PyCharm Discount is live",
        "selftext": "Our end of year fundraiser and membership drive has launched! There are 3 ways to join in to support Python and the PSF:\n- [30% off @PyCharm\n from JetBrains](https://lp.jetbrains.com/psf-q4-2024-fundraiser-3783/)\n- [Donate directly](https://psfmember.org/civicrm/contribute/transact/?reset=1&id=52)\n- [Become a member](https://www.python.org/psf/membership/supporting/)\n\n[Learn more](https://pyfound.blogspot.com/2024/11/help-power-python-2024-fundraiser.html)\n\nPython empowers you to build amazing tools, build/grow companies, and secure jobs\u2014all for free! Consider giving back today."
    },
    {
        "title": "Tuesday Daily Thread: Advanced questions",
        "selftext": "# Weekly Wednesday Thread: Advanced Questions \ud83d\udc0d\n\nDive deep into Python with our Advanced Questions thread! This space is reserved for questions about more advanced Python topics, frameworks, and best practices.\n\n## How it Works:\n\n1. **Ask Away**: Post your advanced Python questions here.\n2. **Expert Insights**: Get answers from experienced developers.\n3. **Resource Pool**: Share or discover tutorials, articles, and tips.\n\n## Guidelines:\n\n* This thread is for **advanced questions only**. Beginner questions are welcome in our [Daily Beginner Thread](#daily-beginner-thread-link) every Thursday.\n* Questions that are not advanced may be removed and redirected to the appropriate thread.\n\n## Recommended Resources:\n\n* If you don't receive a response, consider exploring r/LearnPython or join the [Python Discord Server](https://discord.gg/python) for quicker assistance.\n\n## Example Questions:\n\n1. **How can you implement a custom memory allocator in Python?**\n2. **What are the best practices for optimizing Cython code for heavy numerical computations?**\n3. **How do you set up a multi-threaded architecture using Python's Global Interpreter Lock (GIL)?**\n4. **Can you explain the intricacies of metaclasses and how they influence object-oriented design in Python?**\n5. **How would you go about implementing a distributed task queue using Celery and RabbitMQ?**\n6. **What are some advanced use-cases for Python's decorators?**\n7. **How can you achieve real-time data streaming in Python with WebSockets?**\n8. **What are the performance implications of using native Python data structures vs NumPy arrays for large-scale data?**\n9. **Best practices for securing a Flask (or similar) REST API with OAuth 2.0?**\n10. **What are the best practices for using Python in a microservices architecture? (..and more generally, should I even use microservices?)**\n\nLet's deepen our Python knowledge together. Happy coding! \ud83c\udf1f"
    },
    {
        "title": "If you use uv, what are your use cases for uvx?",
        "selftext": "I really love `uv` as my new All-In-One tool for python project management.  \nI also really like the `uv tool` functionality for tools I regularly use like Harlequin or my kanban/tasks apps `kanban-python` and more lately the less minimal `kanban-tui`.\n\nBut I it never really clicked for me when I would use `uvx` which basically installs a tool temporary and after usage removes it again (though still cached, so future uses go faster).\n\nCurrently I am on my way to release v0.4.0 of [kanban-tui](https://github.com/Zaloog/kanban-tui) with multi board support and board-individual columns. I develop those features in a new branch and just discovered that you can use something like:\n\n```pwhs\nuvx --from git+https://github.com/Zaloog/kanban-tui@lg/independent-board-columns ktui demo\n```\nto install the current development status from a custom branch (or even commit)\nwithin seconds. A great way to quickly share the current progress of your work with friends or use your tool on your system already without creating a new release yet.\n\nI am curious to hear, what are your use cases for `uvx`, and what are your favourite tools to use with it?\n\n"
    },
    {
        "title": "Using Python's pathlib module",
        "selftext": "I've written a hybrid \"why pathlib\" and \"pathlib cheat sheet\" post: \\[Python's pathlib module\\](https://www.pythonmorsels.com/pathlib-module/).\n\nI see this resource as a living document, so feedback is very welcome."
    },
    {
        "title": ".env safely share ",
        "selftext": "How do you manage your .env safely? \n\nMostly when you are in a small group and you can\u2019t be setting up everything to the develop branch all the time \n\nHow do you share that .env with each other and test it locally? "
    }
]